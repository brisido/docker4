# AULA 2

docker version
docker ps
docker container ls
docker system info
docker ps
docker container ls
docker container ls -a
docker image ls
docker images
docker network ls
docker search debian
docker image pull debian
docker pull centos
docker pull alpine
docker pull ubuntu
docker images
docker container run debian /bin/ls /
docker run --name servidor-ubuntu ubuntu ls /tmp
docker ps -a
   39  docker container run -ti --name primeiro --hostname primeiro-homolog debian
   40  docker container ls
   41  docker container attach primeiro
   42  docker container ls
   43  docker container ls -a
   44  docker start primeiro 
   45  docker container ls
   46  docker container exec -ti primeiro bash
   47  docker container ls
   48  docker ps
   49  docker ps -a
   50  docker run -dti --name segundo --hostname segundo-homolog debian bash
   51  docker ps
   52  docker attach segundo 
   53  docker ps
   54  docker ps -a
   55  docker images 
   56  docker ps


docker rm segundo	=> remove container segundo
docker rm -f primeiro	=> stop e remove container primeiro

docker rmi alpine	=> apaga image

docker ps -qa		=> lista os IDs de todos os containers
docker rm -f $(docker ps -qa)	=> remove todos os containers

docker run -dti --name volume-teste -v /srv/data:/data debian bash
docker exec volume-teste cat /data/devops
docker rm -f volume-teste

docker run -dti --name volume-teste2 -v /srv/data:/data debian bash

docker volume create storage
docker run -d --name volume-storage -v storage:/data debian

local do volume => /var/lib/docker/volumes/storage/_data

docker run -dti --name volume-storage3 -v storage:/data debian bash
docker exec volume-storage3 ls /data/
docker exec volume-storage3 cat /data/docker_agil

docker run -dti --name varios-volume -v storage:/data -v /srv/data:/dados debian bash
docker exec -ti varios-volumes bash

docker container run -dti --name servidor-ssh --hostname servidor-ssh --restart=always debian bash

docker container rename servidor-ssh curso-docker
docker rename curso-docker servidor-ssh

docker container run -ti --name servidor-middleware --hostname servidor-systemd debian bash		=> sem privilegios no kernel
docker run --privileged -ti --name servidor-middleware --hostname servidor-iptables debian bash		=> privilegios no kernel

